{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","document","addEventListener","e","handleKey","removeEventListener","this","setState","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,IAAK,IAFT,uDAKE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,SAAS,SAACC,GAAD,OAAO,EAAKC,UAAUD,QAN7D,kCASE,WACEF,SAASI,oBAAoB,QAASC,KAAKF,aAV/C,uBAaE,SAAUD,GACRG,KAAKC,SAAS,CAAEP,IAAKG,EAAEH,QAd3B,oBAiBE,WACE,IAAQA,EAAQM,KAAKP,MAAbC,IAER,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACIR,EAAD,mCAEgCA,EAFhC,KACI,kCAxBf,GAAyBS,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAV,SAASW,eAAe,W","file":"static/js/main.0c82ca84.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  key: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    key: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', (e) => this.handleKey(e));\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKey);\n  }\n\n  handleKey(e: KeyboardEvent) {\n    this.setState({ key: e.key });\n  }\n\n  render() {\n    const { key } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {!key\n            ? ('Nothing was pressed yet')\n            : (`The last pressed key is [${key}]`)}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}